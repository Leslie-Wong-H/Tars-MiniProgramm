<style lang="less">
  .swiper {
    width: 100%;
    height: 90%;
    .swiper-item {
      padding: 40rpx;
      box-sizing: border-box;
      .list {
        position: relative;
        display: flex;
        width: 100%;
        height: 100%;
        align-items: center;
        flex-direction: column;
        background-color: #ffffff;
        border-radius: 10rpx;
        box-shadow: 0 0 12px 2px rgba(0, 0, 0, 0.08);
        .image {
          width: 100%;
          height: 45%;
          border-top-right-radius: 10rpx;
          border-top-left-radius: 10rpx;
        }
        .title {
          font-weight: 400;
          font-size: 36rpx;
          margin-top: 40rpx;
        }
        .intro {
          font-size: 30rpx;
          padding: 30rpx;
          text-align: justify;
        }
        .entrance {
          position: absolute;
          left: 0;
          bottom: 0;
          display: flex;
          flex-direction: column;
          align-items: center;
          width: 100%;
          height: 160rpx;
          navigator {
            display: inline-block;
            height: 60rpx;
            border: 2rpx solid #1749DC;
            border-radius: 10rpx;
            color: #1749DC;
            font-size: 28rpx;
            line-height: 60rpx;
            text-align: center;
            padding-left: 20rpx;
            padding-right: 20rpx;
            margin-top: 50rpx;
          }
          .join_btn {
            display: inline-block;
            height: 60rpx;
            border: 2rpx solid #1749DC;
            border-radius: 10rpx;
            color: #1749DC;
            font-size: 28rpx;
            line-height: 60rpx;
            text-align: center;
            padding-left: 20rpx;
            padding-right: 20rpx;
            margin-top: 50rpx;
          }
        }
      }
    }
    .info-box {
      display: flex;
      flex-direction: column;
      align-items: center;
      background: #ffffff;
      border-radius: 10rpx;
      width: 100%;
      padding: 20rpx 20rpx 40rpx 20rpx;
      .header {
        font-weight: 400;
        font-size: 50rpx;
        height: 120rpx;
        line-height: 80rpx;
        color: #666666;
        display: flex;
        flex-direction: row;
      }
      .item {
        display: flex;
        flex-direction: row;
        padding: 20rpx;
        border-bottom: 1px solid #F6F6F6;
        width: 90%;
        justify-content: space-between;
        text {
          height: 80rpx;
          line-height: 80rpx;
        }
        .activity_name {
          height: 80rpx;
          line-height: 80rpx;
          padding: 0rpx 15rpx;
        }
        .input_activity_name {
          height: 80rpx;
          line-height: 80rpx;
          padding: 0rpx 15rpx;
          max-width: 300rpx;
        }
      }
      .rich_text {
        display: flex;
        flex-direction: column;
        padding: 20rpx;
        border-bottom: 1px solid #F6F6F6;
        width: 90%;
        .time {
          display: flex;
          flex-direction: row;
          justify-content: space-between;
        }
        .activity_intro {
          display: flex;
          flex-direction: row;
          justify-content: space-between;
          text {
            width: 80%;
          }
          textarea {
            display: inline-block;
            width: 300rpx;
          }
          .placeholder_intro {
            color: #b0b0b0; 
            font-size: 0.7rem;
            font-weight: 100;
          }
        }
      }
      .placeholder_class {
        color: #666666; 
        font-size: 0.7rem;
        text-align: center;
      }
    }
  }
  .time-cell {
    width: 100%;
  }
</style>

<template>
  <view class="container">
    <swiper class="swiper" bindchange="pageChange" current='{{currentPageIndex}}'>
      <swiper-item class="swiper-item">
        <view class="list">
          <view class="info-box">
            <view class="header"><text>创建新活动</text></view>
            <view class="item">
              <text>活动名称:</text>
              <input class="input_activity_name" placeholder="不得超过10字" placeholder-class="placeholder_class" maxlength="10" bindblur="input_name" focus="true"/>
            </view>
            <view class="rich_text">
              <text>活动时间:</text>
              <view class="time">
                <van-cell class="time-cell" title="开始：" is-link border="{{false}}" value="{{activity.start_time}}" bind:click="input_start_time"/>
              </view>
              <view class="time">
                <van-cell class="time-cell" title="结束：" is-link border="{{false}}" value="{{activity.stop_time}}" bind:click="input_stop_time"/>
              </view>
            </view>
            <view class="rich_text">
              <text>活动报名时间:</text>
              <view class="time">
                <van-cell class="time-cell" title="开始：" is-link border="{{false}}" value="{{activity.registry_start_time}}" bind:click="input_registry_start_time"/>
              </view>
              <view class="time">
                <van-cell class="time-cell" title="结束：" is-link border="{{false}}" value="{{activity.registry_stop_time}}" bind:click="input_registry_stop_time"/>
              </view>
            </view>
            <view class="rich_text">
              <text>活动介绍:</text>
              <view class="activity_intro">
                <textarea placeholder="不得超过50字" placeholder-class="placeholder_intro" maxlength="50" bindblur="input_activity_intro" focus="true" auto-height="true"/>
              </view>  
            </view>
          </view>
          <view class="entrance">
            <view class="join_btn" @tap="send">
              <text>发布活动</text>
            </view>
          </view>
        </view>
      </swiper-item>
    </swiper>
      <van-popup 
        show="{{ popupShow }}" 
        closeable
        position="bottom" 
        custom-style="height: 40%" 
        bind:close="onPopupClose">
          <van-datetime-picker
            type="datetime"
            visible-item-count="3"
            value="{{ currentDate }}"
            min-date="{{ minDate }}"
            formatter="{{ formatter }}"
            bind:confirm="onConfirm"
            bind:cancel="onCancel"
          />
      </van-popup>
  </view>
</template>


<script>
  import wepy from 'wepy'
  import api from '../../api/request'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '活动发布',
      'usingComponents': {
        'van-tab': '../../components/vant/tab/index',
        'van-tabs': '../../components/vant/tabs/index',
        'van-collapse': '../../components/vant/collapse/index',
        'van-collapse-item': '../../components/vant/collapse-item/index',
        'van-cell': '../../components/vant/cell/index',
        'van-popup': '../../components/vant/popup/index',
        'van-datetime-picker': '../../components/vant/datetime-picker/index'
      }
    }
    components = {}
    data = {
      popupShow: false,
      minDate: new Date().getTime(),
      currentDate: new Date().getTime(),
      formatter(type, value) {
        if (type === 'year') return `${value}年`
        if (type === 'month') return `${value}月`
        if (type === 'day') return `${value}日`
        if (type === 'hour') return `${value}时`
        if (type === 'minute') return `${value}分`
        return value
      },
      setTimeObj: '',
      activity: {
        name: '',
        start_time: '',
        stop_time: '',
        registry_start_time: '',
        registry_stop_time: '',
        activity_intro: ''
      },
      club_id: '',
      club_name: ''
    }

    methods = {
      showPopup() {
        this.popupShow = true
      },
      onPopupClose() {
        console.log(this.popupShow)
        this.popupShow = false
      },
      onCancel() {
        this.popupShow = false
      },
      onConfirm(event) {
        const datetime = new Date(event.detail)
        const time = datetime.toLocaleString('chinese', { hour12: false }).replace(new RegExp('/', 'g'), '-').slice(0, -3)
        console.log(time)
        this.popupShow = false
        if (this.setTimeObj !== '') {
          this.activity[this.setTimeObj] = time
        }
      },
      input_name(event) {
        this.activity.name = event.detail.value
      },
      input_start_time() {
        this.popupShow = true
        this.setTimeObj = 'start_time'
      },
      input_stop_time() {
        this.popupShow = true
        this.setTimeObj = 'stop_time'
      },
      input_registry_start_time() {
        this.popupShow = true
        this.setTimeObj = 'registry_start_time'
      },
      input_registry_stop_time() {
        this.popupShow = true
        this.setTimeObj = 'registry_stop_time'
      },
      input_activity_intro(event) {
        this.activity.activity_intro = event.detail.value
        this.$apply()
      },
      async send() {
        wepy.showModal({
          title: '温馨提示',
          content: '确认提交活动？',
          confirmText: '确认',
          confirmColor: '#1749DC'
        }).then(res => {
          if (res.confirm) {
            console.log('用户点击确定')
            this.releaseActivity()
          } else if (res.cancel) {
            console.log('用户点击取消')
          }
        })
      }
    }
    async releaseActivity() {
      if (!(this.activity.name && this.activity.activity_intro)) {
        wepy.showModal({
          title: '警告!',
          content: '内容不完整',
          confirmText: '确定',
          confirmColor: '#1749DC',
          showCancel: false
        }).then(res => {
        })
      } else {
        const res = await api.request({
          url: api.uri.releaseActivity,
          method: 'POST',
          data: {
            name: this.activity.name,
            sponsor: wepy.getStorageSync('wx_id'),
            club_id: this.club_id,
            start_time: this.activity.start_time + ':00',
            stop_time: this.activity.start_time + ':00',
            registry_start_time: this.activity.registry_start_time + ':00',
            registry_stop_time: this.activity.registry_stop_time + ':00',
            content: this.activity.activity_intro
          }
        })
        if (res.data.status === 400) {
          console.log(res.data.errmsg)
          wx.showToast({
            title: '服务器错误' + res.data.errmsg,
            icon: 'none',
            duration: 3000
          })
        } else {
          wepy.showModal({
            title: '温馨提示',
            content: '发布成功',
            confirmText: '完成',
            confirmColor: '#1749DC',
            showCancel: false
          }).then(res => {
          // wepy.navigateBack({
          //   delta: 1
          // })
          })
        }
      }
    }

    onShow() {}

    async onLoad(options) {
      const currentDateTime = new Date().toLocaleString('chinese', { hour12: false }).replace(new RegExp('/', 'g'), '-').slice(0, -3)
      this.activity.start_time = currentDateTime
      this.activity.stop_time = currentDateTime
      this.activity.registry_start_time = currentDateTime
      this.activity.registry_stop_time = currentDateTime
      if (options) {
        console.log(options)
        this.club_id = options.club_id
      }
    }
  }
</script>
